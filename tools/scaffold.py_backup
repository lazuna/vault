from pathlib import Path
import shutil

# Use relative or absolute path (edit as needed)
base_path = Path("vault")  # Or: Path.home() / "Documents" / "vault"

# Define structure
structure = {
    "knowledge": {},
    "projects": {},
    "growth": {},
    "meta": {
        "changelog.md": "",
    },
    ".github": {},
}

# README content
readme = """# 🧠 vault

A curated vault of technical knowledge, real-world projects, and personal growth insights — built for mastery, maintained for clarity.

## 📁 Structure

- `knowledge/` — Technical deep-dives on backend, frontend, cloud, system design, etc.
- `projects/` — Hands-on code examples and blueprints
- `growth/` — Communication, leadership, productivity, and career guides
- `meta/` — Templates, changelogs, contribution guidelines

## 🛡 License

- **Code and Templates**: MIT License (`LICENSE`)
- **Documentation and Notes**: [CC BY-NC 4.0](https://creativecommons.org/licenses/by-nc/4.0/)

> Attribution required. Commercial use of notes not permitted without consent.
"""

# MIT License (truncated for brevity)
license_text = """MIT License

Copyright (c) 2025

Permission is hereby granted, free of charge, to any person obtaining a copy...
"""

# Create structure
def create_vault_structure(base, struct):
    for name, contents in struct.items():
        path = base / name
        if isinstance(contents, dict):
            path.mkdir(parents=True, exist_ok=True)
            create_vault_structure(path, contents)
        else:
            path.parent.mkdir(parents=True, exist_ok=True)
            path.write_text(contents)

# Run
create_vault_structure(base_path, structure)
(base_path / "README.md").write_text(readme)
(base_path / "LICENSE").write_text(license_text)

# Optional: create zip
shutil.make_archive("vault-foundation", 'zip', base_path)

